

pipeline{
	agent any

	stages {

		stage('Checkout') {
			steps {
			// 소스코드 체크아웃 
			checkout scm
			} 
		}

		stage('Pre-Build') { 
			steps {
				script{
					// make Book class into classes folder (in workspace)
					sh 'mkdir -p classes'
					sh 'javac -encoding UTF-8 -d classes SWProj/src/Book.java'

					echo "Pre-Build finished!!! :D"
				}

			}
			
		}
		

		stage('Build') { 
			steps {
				script{

				// mac code here
				// JUnit 5 테스트 실행을 위한 classpath 설정
				def classpath = "java -jar SWProj/.settings/junit-platform-console-standalone-1.7.1.jar"
				sh 'pwd'
				sh 'java -cp classes:SWProj/.settings/junit-platform-console-standalone-1.7.1.jar org.junit.platform.console.ConsoleLauncher --scan-class-path'
				
				} 
				dir ("SWProj/src") {
					sh 'javac PerformanceTest.java'
				}

				echo "Build finished!!! :D"

			}
		}

		stage('Test') { 
			steps {
				// script{

				// // mac code here
				// // JUnit 5 테스트 실행을 위한 classpath 설정
				// def classpath = "java -jar /Users/nimo/Desktop/jenkinsSWProj/SWProj/.settings/junit-platform-console-standalone-1.7.1.jar"
				// sh 'java -cp classes:/Users/nimo/Desktop/jenkinsSWProj/SWProj/.settings/junit-platform-console-standalone-1.7.1.jar org.junit.platform.console.ConsoleLauncher --scan-class-path'
				// sh 'pwd'
				
				// } 
				dir ("SWProj/src") {
					sh 'java PerformanceTest > junit_test_results.txt'
				}

				echo "Test finished!!! :D"

			}
		}

	}

	post {
		always{
			dir ("SWProj/src") {
				archiveArtifacts 'junit_test_results.txt'
			}

		}
		
	}

}


