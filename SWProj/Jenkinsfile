
pipeline{
	agent any
	stages {

		stage('Git clone') {
            steps() {
                git branch: 'main'
				url: 'https://github.com/nimo-my/SWProj.git'
            }
        }

		stage('Checkout') {
			steps {
			// 소스코드 체크아웃 
			checkout scm
			} 
		}

		stage('Build') { 
			steps {
				// mac code here
				script{
				 sh 'mkdir -p classes'
				 sh 'javac -encoding UTF-8 -d classes /var/lib/jenkins/workspace/SWProj/src/Book.java'
				}

				// windows code here

				}
			echo "Build finished!!! :D"
			}
		}


		stage('Test01 - BookTest (JUnit test)') { 
			steps {
				script{

				// mac code here
				// JUnit 5 테스트 실행을 위한 classpath 설정
				def classpath = "java -jar /var/lib/jenkins/workspace/SWProj/.settings/junit-platform-console-standalone-1.7.1.jar"
				sh 'java -cp classes:/var/lib/jenkins/workspace/SWProj/.settings/junit-platform-console-standalone-1.7.1.jar org.junit.platform.console.ConsoleLauncher --scan-class-path > junit_test_results.txt'
				sh 'cat junit_test_results.txt'

				// windows code here

				} 

				

				echo "Test01 finished!!! :D"
			}
		}

		stage('Test02 - Performance Test (in main function)') { 
			steps {
				// script{
				
				// // mac code here

				// // windows code here
				
				// }
				echo "Test02 finished!!! :D"
			}
		}
	}
	post {
		always{
			archiveArtifacts 'test_results.txt'
		// success {
		// echo 'Build and test succeeded'
		// } 
	}
		
}


